//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CTSEMPEntities : DbContext
    {
        public CTSEMPEntities()
            : base("name=CTSEMPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DepartmentMaster> DepartmentMasters { get; set; }
        public virtual DbSet<EmpMaster> EmpMasters { get; set; }
        public virtual DbSet<SalaryInfo> SalaryInfoes { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
    
        public virtual int DeleteEmployee(Nullable<int> empCode)
        {
            var empCodeParameter = empCode.HasValue ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", empCodeParameter);
        }
    
        public virtual int SaveDepartment(string empDepartment, string empDesignation, ObjectParameter count)
        {
            var empDepartmentParameter = empDepartment != null ?
                new ObjectParameter("EmpDepartment", empDepartment) :
                new ObjectParameter("EmpDepartment", typeof(string));
    
            var empDesignationParameter = empDesignation != null ?
                new ObjectParameter("EmpDesignation", empDesignation) :
                new ObjectParameter("EmpDesignation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveDepartment", empDepartmentParameter, empDesignationParameter, count);
        }
    
        public virtual int SaveEmployee(Nullable<int> empCode, string empName, Nullable<System.DateTime> empDob, string email, string empDepartment, string empDesignation)
        {
            var empCodeParameter = empCode.HasValue ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var empDobParameter = empDob.HasValue ?
                new ObjectParameter("EmpDob", empDob) :
                new ObjectParameter("EmpDob", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var empDepartmentParameter = empDepartment != null ?
                new ObjectParameter("EmpDepartment", empDepartment) :
                new ObjectParameter("EmpDepartment", typeof(string));
    
            var empDesignationParameter = empDesignation != null ?
                new ObjectParameter("EmpDesignation", empDesignation) :
                new ObjectParameter("EmpDesignation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEmployee", empCodeParameter, empNameParameter, empDobParameter, emailParameter, empDepartmentParameter, empDesignationParameter);
        }
    
        public virtual ObjectResult<Select_Emp_By_Name_Result> Select_Emp_By_Name(string empName)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Emp_By_Name_Result>("Select_Emp_By_Name", empNameParameter);
        }
    }
}
